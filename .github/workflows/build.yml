name: Build Windows App

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      PYTHON_VERSION: "3.10"
      PYTHONIOENCODING: "utf-8"
      PYTHONUTF8: "1"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: "x64"

      - name: Install Model Download Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install huggingface_hub tqdm requests
          chcp 65001
        shell: cmd

      - name: Download Model
        env:
          PYTHONIOENCODING: "utf-8"
          PYTHONUTF8: "1"
        run: |
          chcp 65001
          set PYTHONIOENCODING=utf-8
          python download_model.py
        shell: cmd

      - name: Check Model File
        run: |
          echo "Model file size:"
          dir /s models
          echo "Model file details:"
          dir /s models\DocLayout-YOLO-DocStructBench-onnx
        shell: cmd

      - name: Create Python Environment
        run: |
          python -m venv python_env
          call python_env\Scripts\activate.bat
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install -r requirements.txt
          deactivate
        shell: cmd

      - name: Clean Python Environment
        run: |
          echo "Cleaning Python environment..."
          del /f /s /q python_env\Scripts\*.pyc
          del /f /s /q python_env\Scripts\__pycache__
          del /f /s /q python_env\Lib\site-packages\*.pyc
          del /f /s /q python_env\Lib\site-packages\__pycache__
          timeout /t 5
        shell: cmd
        continue-on-error: true

      - name: Install Dependencies
        run: npm ci

      - name: Download NSIS
        run: |
          curl -L -o nsis.exe https://sourceforge.net/projects/nsis/files/NSIS%203/3.08/nsis-3.08-setup.exe/download
          .\nsis.exe /S
          echo "C:\Program Files (x86)\NSIS" >> $GITHUB_PATH
          dir "C:\Program Files (x86)\NSIS"
          makensis /VERSION
        shell: powershell

      - name: Build App
        env:
          ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
          ELECTRON_BUILDER_BINARIES_MIRROR: https://npmmirror.com/mirrors/electron-builder-binaries/
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          DEBUG: electron-builder,electron-builder:*
        run: |
          echo "Current directory:"
          dir
          echo "Model files before build:"
          dir /s models
          timeout /t 5
          taskkill /F /IM python.exe /T
          taskkill /F /IM pythonw.exe /T
          timeout /t 5
          echo "Starting build..."
          npm run build:win
          echo "Build completed"
          echo "Checking dist directory:"
          dir /s dist
        shell: cmd
        continue-on-error: true

      - name: Check Build Output
        run: |
          echo "Build output size:"
          dir /s dist
          echo "Checking app.asar.unpacked:"
          dir /s "dist\win-unpacked\resources\app.asar.unpacked"
          echo "Checking model files in build:"
          dir /s "dist\win-unpacked\resources\app.asar.unpacked\models"
        shell: cmd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            dist/*.zip
            dist/latest*.yml
          if-no-files-found: warn

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
