name: Build Windows App

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      PYTHON_VERSION: "3.10"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: "x64"

      - name: Create Python Environment
        run: |
          python -m venv python_env
          python_env\Scripts\python -m pip install --upgrade pip
          python_env\Scripts\pip install wheel setuptools
          python_env\Scripts\pip install -r requirements.txt
        shell: cmd

      - name: Install Dependencies
        run: npm ci

      - name: Build App
        env:
          ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
          ELECTRON_BUILDER_BINARIES_MIRROR: https://npmmirror.com/mirrors/electron-builder-binaries/
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          DEBUG: electron-builder
        run: npm run build:win

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            dist/*.zip
            dist/latest*.yml
          if-no-files-found: warn

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
