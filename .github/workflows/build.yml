name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: read

    env:
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Verify model file
        run: |
          $modelPath = "models/DocLayout-YOLO-DocStructBench-onnx/model.onnx"
          if (Test-Path $modelPath) {
              $size = (Get-Item $modelPath).Length / 1MB
              Write-Host "Model file exists, size: $size MB"
          } else {
              Write-Host "Model file not found, downloading..."
              python download_model.py
          }
        shell: pwsh

      - name: Install NSIS
        shell: powershell
        run: |
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

          Write-Host "Downloading NSIS..."
          $output = "nsis-setup.exe"
          $maxAttempts = 3
          $attempt = 1
          $downloaded = $false

          while ($attempt -le $maxAttempts -and -not $downloaded) {
              try {
                  Write-Host "Attempt $attempt to download NSIS..."
                  # 使用 curl 下载，带进度显示
                  curl.exe -L `
                      -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" `
                      --tlsv1.2 `
                      --progress-bar `
                      -o "$output" `
                      "https://netcologne.dl.sourceforge.net/project/nsis/NSIS%203/3.09/nsis-3.09-setup.exe"

                  if (Test-Path $output) {
                      $fileSize = (Get-Item $output).Length
                      if ($fileSize -gt 1MB) {
                          Write-Host "Successfully downloaded NSIS installer (Size: $($fileSize/1MB) MB)"
                          $downloaded = $true
                          break
                      } else {
                          Write-Host "Downloaded file is too small, retrying..."
                          Remove-Item $output -Force
                      }
                  }
              } catch {
                  Write-Host "Download failed: $_"
              }
              $attempt++
              Start-Sleep -Seconds 5
          }

          if (-not $downloaded) {
              throw "Failed to download NSIS after $maxAttempts attempts"
          }

          Write-Host "Installing NSIS..."
          $process = Start-Process -FilePath $output -ArgumentList "/S" -Wait -PassThru
          if ($process.ExitCode -ne 0) {
              throw "NSIS installation failed with exit code: $($process.ExitCode)"
          }

          $nsisPath = "C:\Program Files (x86)\NSIS\makensis.exe"
          if (-not (Test-Path $nsisPath)) {
              throw "NSIS installation not found at: $nsisPath"
          }

          Write-Host "NSIS installed successfully"
          & $nsisPath /VERSION

      - name: Build with PyInstaller
        run: |
          # 确保 PyInstaller 已安装
          python -m pip install --upgrade pyinstaller
          # 显示 Python 和 PyInstaller 版本
          python --version
          pyinstaller --version
          # 构建应用
          python -m PyInstaller --noconfirm --onedir --windowed --add-data "models;models" --add-data "python_env;python_env" --icon=icon.ico main.py

      - name: Build NSIS installer
        run: |
          & 'C:\Program Files (x86)\NSIS\makensis.exe' installer.nsi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: PDFTranslator-Installer
          path: PDFTranslator_setup.exe
